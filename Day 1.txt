appwiz.cpl
firewall.cpl




Microsoft Windows [Version 10.0.19044.2486]
(c) Microsoft Corporation. All rights reserved.

C:\WINDOWS\system32>winver

C:\WINDOWS\system32>winver

C:\WINDOWS\system32>choco install -y nano
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano v7.1.13 already installed.
 Use --force to reinstall, specify a version to install, or try upgrade.

Chocolatey installed 0/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Warnings:
 - nano - nano v7.1.13 already installed.
 Use --force to reinstall, specify a version to install, or try upgrade.



C:\WINDOWS\system32>choco install -y nano --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano v7.1.13 already installed. Forcing reinstall of version '7.1.13'.
 Please use upgrade if you meant to upgrade to a new version.
Progress: Downloading nano 7.1.13... 100%

nano-win v7.1.13 (forced) [Approved]
nano-win package files install completed. Performing other installation steps.
Attempt to get headers for https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z failed.
  The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
Downloading nano-win
  from 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'
ERROR: The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
This package is likely not broken for licensed users - see https://docs.chocolatey.org/en-us/features/private-cdn.
The install of nano-win was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.

nano v7.1.13 (forced) [Approved]
nano package files install completed. Performing other installation steps.
 The install of nano was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\nano'

Chocolatey installed 1/2 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano-win (exited 404) - Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.




C:\WINDOWS\system32>choco install -y nano --source "https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z" --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano v7.1.13 already installed. Forcing reinstall of version '7.1.13'.
 Please use upgrade if you meant to upgrade to a new version.
nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano - nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.





C:\WINDOWS\system32>choco install -y nano --pre --source "https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z" --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano v7.1.13 already installed. Forcing reinstall of version '7.1.13'.
 Please use upgrade if you meant to upgrade to a new version.
nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano - nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Enjoy using Chocolatey? Explore more amazing features to take your
experience to the next level at
 https://chocolatey.org/compare






C:\WINDOWS\system32>choco /?
This is a listing of all of the different things you can pass to choco.

DEPRECATION NOTICE

The shims `chocolatey`, `cinst`, `clist`, `cpush`, `cuninst` and `cup` are deprecated.
We recommend updating all scripts to use their full command equivalent as these will be
removed in v2.0.0 of Chocolatey.

Options and Switches

 -v, --version
     Version - Prints out the Chocolatey version. Available in 0.9.9+.

Commands

 * apikey - retrieves, saves or deletes an apikey for a particular source
 * config - Retrieve and configure config file settings
 * export - exports list of currently installed packages
 * feature - view and configure choco features
 * features - view and configure choco features (alias for feature)
 * find - searches remote or local packages (alias for search)
 * help - displays top level help information for choco
 * info - retrieves package information. Shorthand for choco search pkgname --exact --verbose
 * install - installs packages using configured sources
 * list - lists remote or local packages
 * new - creates template files for creating a new Chocolatey package
 * outdated - retrieves information about packages that are outdated. Similar to upgrade all --noop
 * pack - packages nuspec, scripts, and other Chocolatey package resources into a nupkg file
 * pin - suppress upgrades for a package
 * push - pushes a compiled nupkg to a source
 * search - searches remote or local packages
 * setapikey - retrieves, saves or deletes an apikey for a particular source (alias for apikey)
 * source - view and configure default sources
 * sources - view and configure default sources (alias for source)
 * template - get information about installed templates
 * templates - get information about installed templates (alias for template)
 * uninstall - uninstalls a package
 * unpackself - re-installs Chocolatey base files
 * upgrade - upgrades packages from various sources


Please run chocolatey with `choco command -help` for specific help on
 each command.

How To Pass Options / Switches

You can pass options and switches in the following ways:

 * Unless stated otherwise, an option/switch should only be passed one
   time. Otherwise you may find weird/non-supported behavior.
 * `-`, `/`, or `--` (one character switches should not use `--`)
 * **Option Bundling / Bundled Options**: One character switches can be
   bundled. e.g. `-d` (debug), `-f` (force), `-v` (verbose), and `-y`
   (confirm yes) can be bundled as `-dfvy`.
 * NOTE: If `debug` or `verbose` are bundled with local options
   (not the global ones above), some logging may not show up until after
   the local options are parsed.
 * **Use Equals**: You can also include or not include an equals sign
   `=` between options and values.
 * **Quote Values**: When you need to quote an entire argument, such as
   when using spaces, please use a combination of double quotes and
   apostrophes (`"'value'"`). In cmd.exe you can just use double quotes
   (`"value"`) but in powershell.exe you should use backticks
   (`` `"value`" ``) or apostrophes (`'value'`). Using the combination
   allows for both shells to work without issue, except for when the next
   section applies.
 * **Pass quotes in arguments**: When you need to pass quoted values to
   to something like a native installer, you are in for a world of fun. In
   cmd.exe you must pass it like this: `-ia "/yo=""Spaces spaces"""`. In
   PowerShell.exe, you must pass it like this: `-ia '/yo=""Spaces spaces""'`.
   No other combination will work. In PowerShell.exe if you are on version
   v3+, you can try `--%` before `-ia` to just pass the args through as is,
   which means it should not require any special workarounds.
 * **Periods in PowerShell**: If you need to pass a period as part of a
   value or a path, PowerShell doesn't always handle it well. Please
   quote those values using "Quote Values" section above.
 * Options and switches apply to all items passed, so if you are
   installing multiple packages, and you use `--version=1.0.0`, choco
   is going to look for and try to install version 1.0.0 of every
   package passed. So please split out multiple package calls when
   wanting to pass specific options.

Scripting / Integration - Best Practices / Style Guide

When writing scripts, such as PowerShell scripts passing options and
switches, there are some best practices to follow to ensure that you
don't run into issues later. This also applies to integrations that
are calling Chocolatey and parsing output. Chocolatey **uses**
PowerShell, but it is an exe, so it cannot return PowerShell objects.

Following these practices ensures both readability of your scripts AND
compatibility across different versions and editions of Chocolatey.
Following this guide will ensure your experience is not frustrating
based on choco not receiving things you think you are passing to it.

 * For consistency, always use `choco`, not `choco.exe`. Never use
   shortcut commands like `cinst` or `cup` (The shortcuts `cinst`
   and `cup` will be removed in v2.0.0).
 * Always have the command as the first argument to `choco`. e.g.
   `choco install`, where `install` is the command.
 * If there is a subcommand, ensure that is the second argument. e.g.
   `choco source list`, where `source` is the command and `list` is the
   subcommand.
 * Typically the subject comes next. If installing packages, the
   subject would be the package names, e.g. `choco install pkg1 pkg2`.
 * Never use 'nupkg' or point directly to a nupkg file UNLESS using
   'choco push'. Use the source folder instead, e.g. `choco install
   <package id> --source="'c:\folder\with\package'"` instead of
   `choco install DoNotDoThis.1.0.nupkg` or `choco install DoNotDoThis
    --source="'c:\folder\with\package\DoNotDoThis.1.0.nupkg'"`.
 * Switches and parameters are called simply options. Options come
   after the subject. e.g. `choco install pkg1 --debug --verbose`.
 * Never use the force option (`--force`/`-f`) in scripts (or really
   otherwise as a default mode of use). Force is an override on
   Chocolatey behavior. If you are wondering why Chocolatey isn't doing
   something like the documentation says it should, it's likely because
   you are using force. Stop.
 * Always use full option name. If the short option is `-n`, and the
   full option is `--name`, use `--name`. The only acceptable short
   option for use in scripts is `-y`. Find option names in help docs
   online or through `choco -?` /`choco [Command Name] -?`.
 * For scripts that are running automated, always use `-y`. Do note
   that even with `-y` passed, some things / state issues detected will
   temporarily stop for input - the key here is temporarily. They will
   continue without requiring any action after the temporary timeout
   (typically 30 seconds).
 * Full option names are prepended with two dashes, e.g. `--` or
   `--debug --verbose --ignore-proxy`.
 * When setting a value to an option, always put an equals (`=`)
   between the name and the setting, e.g. `--source="'local'"`.
 * When setting a value to an option, always surround the value
   properly with double quotes bookending apostrophes, e.g.
   `--source="'internal_server'"`.
 * If you are building PowerShell scripts, you can most likely just
   simply use apostrophes surrounding option values, e.g.
   `--source='internal_server'`.
 * Prefer upgrade to install in scripts. You can't `install` to a newer
   version of something, but you can `choco upgrade` which will do both
   upgrade or install (unless switched off explicitly).
 * If you are sharing the script with others, pass `--source` to be
   explicit about where the package is coming from. Use full link and
   not source name ('https://community.chocolatey.org/api/v2' versus
   'chocolatey').
 * If parsing output, you might want to use `--limit-output`/`-r` to
   get output in a more machine parseable format. NOTE: Not all
   commands handle return of information in an easily digestible
   output.
 * Use exit codes to determine status. Chocolatey exits with 0 when
   everything worked appropriately and other exits codes like 1 when
   things error. There are package specific exit codes that are
   recommended to be used and reboot indicating exit codes as well. To
   check exit code when using PowerShell, immediately call
   `$exitCode = $LASTEXITCODE` to get the value choco exited with.

Here's an example following bad practices (line breaks added for
 readability):

  `choco install pkg1 -y -params '/Option:Value /Option2:value with
   spaces' --c4b-option 'Yaass' --option-that-is-new 'dude upgrade'`

Now here is that example written with best practices (again line
 breaks added for readability - there are not line continuations
 for choco):

  `choco upgrade pkg1 -y --source="'https://community.chocolatey.org/api/v2'"
   --package-parameters="'/Option:Value /Option2:value with spaces'"
   --c4b-option="'Yaass'" --option-that-is-new="'dude upgrade'"`

Note the differences between the two:
 * Which is more self-documenting?
 * Which will allow for the newest version of something installed or
   upgraded to (which allows for more environmental consistency on
   packages and versions)?
 * Which may throw an error on a badly passed option?
 * Which will throw errors on unknown option values? See explanation
   below.

Chocolatey ignores options it doesn't understand, but it can only
 ignore option values if they are tied to the option with an
 equals sign ('='). Note those last two options in the examples above?
 If you roll off of a commercial edition or someone with older version
 attempts to run the badly crafted script `--c4b-option 'Yaass'
 --option-that-is-new 'dude upgrade'`, they are likely to see errors on
 'Yaass' and 'dude upgrade' because they are not explicitly tied to the
 option they are written after. Now compare that to the other script.
 Choco will ignore `--c4b-option="'Yaass'"` and
 `--option-that-is-new="'dude upgrade'"` as a whole when it doesn't
 register the options. This means that your script doesn't error.

Following these scripting best practices will ensure your scripts work
 everywhere they are used and with newer versions of Chocolatey.


Default Options and Switches

 -?, --help, -h
     Prints out the help menu.

 -d, --debug
     Debug - Show debug messaging.

 -v, --verbose
     Verbose - Show verbose messaging. Very verbose messaging, avoid using
       under normal circumstances.

     --trace
     Trace - Show trace messaging. Very, very verbose trace messaging. Avoid
       except when needing super low-level .NET Framework debugging. Available
       in 0.10.4+.

     --nocolor, --no-color
     No Color - Do not show colorization in logging output. This overrides
       the feature 'logWithoutColor', set to 'False'. Available in 0.10.9+.

     --acceptlicense, --accept-license
     AcceptLicense - Accept license dialogs automatically. Reserved for
       future use.

 -y, --yes, --confirm
     Confirm all prompts - Chooses affirmative answer instead of prompting.
       Implies --accept-license

 -f, --force
     Force - force the behavior. Do not use force during normal operation -
       it subverts some of the smart behavior for commands.

     --noop, --whatif, --what-if
     NoOp / WhatIf - Don't actually do anything.

 -r, --limitoutput, --limit-output
     LimitOutput - Limit the output to essential information

     --timeout, --execution-timeout=VALUE
     CommandExecutionTimeout (in seconds) - The time to allow a command to
       finish before timing out. Overrides the default execution timeout in the
       configuration of 2700 seconds. '0' for infinite starting in 0.10.4.

 -c, --cache, --cachelocation, --cache-location=VALUE
     CacheLocation - Location for download cache, defaults to %TEMP% or value
       in chocolatey.config file.

     --allowunofficial, --allow-unofficial, --allowunofficialbuild, --allow-unofficial-build
     AllowUnofficialBuild - When not using the official build you must set
       this flag for choco to continue.

     --failstderr, --failonstderr, --fail-on-stderr, --fail-on-standard-error, --fail-on-error-output
     FailOnStandardError - Fail on standard error output (stderr), typically
       received when running external commands during install providers. This
       overrides the feature failOnStandardError.

     --use-system-powershell
     UseSystemPowerShell - Execute PowerShell using an external process
       instead of the built-in PowerShell host. Should only be used when
       internal host is failing. Available in 0.9.10+.

     --no-progress
     Do Not Show Progress - Do not show download progress percentages.
       Available in 0.10.4+.

     --proxy=VALUE
     Proxy Location - Explicit proxy location. Overrides the default proxy
       location of ''. Available for config settings in 0.9.9.9+, this CLI
       option available in 0.10.4+.

     --proxy-user=VALUE
     Proxy User Name - Explicit proxy user (optional). Requires explicit
       proxy (`--proxy` or config setting). Overrides the default proxy user of
       ''. Available for config settings in 0.9.9.9+, this CLI option available
       in 0.10.4+.

     --proxy-password=VALUE
     Proxy Password - Explicit proxy password (optional) to be used with
       username. Requires explicit proxy (`--proxy` or config setting) and user
       name.  Overrides the default proxy password (encrypted in settings if
       set). Available for config settings in 0.9.9.9+, this CLI option
       available in 0.10.4+.

     --proxy-bypass-list=VALUE
     ProxyBypassList - Comma separated list of regex locations to bypass on
       proxy. Requires explicit proxy (`--proxy` or config setting). Overrides
       the default proxy bypass list of ''. Available in 0.10.4+.

     --proxy-bypass-on-local
     Proxy Bypass On Local - Bypass proxy for local connections. Requires
       explicit proxy (`--proxy` or config setting). Overrides the default
       proxy bypass on local setting of 'True'. Available in 0.10.4+.

     --log-file=VALUE
     Log File to output to in addition to regular loggers. Available in 0.1-
       0.8+.

     --skipcompatibilitychecks, --skip-compatibility-checks
     SkipCompatibilityChecks - Prevent warnings being shown before and after
       command execution when a runtime compatibility problem is found between
       the version of Chocolatey and the Chocolatey Licensed Extension.
       Available in 1.1.0+
Chocolatey v1.2.1



C:\WINDOWS\system32>choco install -y nano --source="https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z" --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano v7.1.13 already installed. Forcing reinstall of version '7.1.13'.
 Please use upgrade if you meant to upgrade to a new version.
nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano - nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10155_v7.1-12-g14f292a7c.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.






C:\WINDOWS\system32>nano /?
'nano' is not recognized as an internal or external command,
operable program or batch file.

C:\WINDOWS\system32>choco install nano -y --version=7.1 --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Version was specified as '7.1'. It is possible that version
 does not exist for 'nano' at the source specified.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano - nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://community.chocolatey.org/api/v2/'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Version was specified as '7.1'. It is possible that version
 does not exist for 'nano' at the source specified.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.




C:\WINDOWS\system32>choco uninstall nano
Chocolatey v1.2.1
Uninstalling the following packages:
nano

nano v7.1.13
 Skipping auto uninstaller - No registry snapshot.
 nano has been successfully uninstalled.

Chocolatey uninstalled 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).





C:\WINDOWS\system32>choco install nano --version=7.1.13
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
Progress: Downloading nano 7.1.13... 100%

nano-win v7.1.13 [Approved]
nano-win package files install completed. Performing other installation steps.
The package nano-win wants to run 'chocolateyInstall.ps1'.
Note: If you don't run this script, the installation will fail.
Note: To confirm automatically next time, use '-y' or consider:
choco feature enable -n allowGlobalConfirmation
Do you want to run the script?([Y]es/[A]ll - yes to all/[N]o/[P]rint): yes

Attempt to get headers for https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z failed.
  The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
Downloading nano-win
  from 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'
ERROR: The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
This package is likely not broken for licensed users - see https://docs.chocolatey.org/en-us/features/private-cdn.
The install of nano-win was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.

nano v7.1.13 [Approved]
nano package files install completed. Performing other installation steps.
 The install of nano was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\nano'

Chocolatey installed 1/2 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano-win (exited 404) - Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.






C:\WINDOWS\system32>choco uninstall nano
Chocolatey v1.2.1
Uninstalling the following packages:
nano

nano v7.1.13
 Skipping auto uninstaller - No registry snapshot.
 nano has been successfully uninstalled.

Chocolatey uninstalled 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).





C:\WINDOWS\system32>choco install nano -y --source='https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z' --force
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
Error retrieving packages from source 'https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z':
 The remote server returned an error: (404) Not Found.
nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano - nano not installed. The package was not found with the source(s) listed.
 Source(s): 'https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z'
 NOTE: When you specify explicit sources, it overrides default sources.
If the package version is a prerelease and you didn't specify `--pre`,
 the package may not be found.
Please see https://docs.chocolatey.org/en-us/troubleshooting for more
 assistance.





C:\WINDOWS\system32>wget -O nano 'https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z'
'https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z': Scheme missing.




C:\WINDOWS\system32>curl /?
curl: (3) URL using bad/illegal format or missing URL




C:\WINDOWS\system32>curl https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z
Warning: Binary output can mess up your terminal. Use "--output -" to tell
Warning: curl to output it to your terminal anyway, or consider "--output
Warning: <FILE>" to save to a file.



C:\WINDOWS\system32>curl "https://files.lhmouse.com/nano-win/nano-win_10141_v7.0-7-gbef7de8e9.7z"
Warning: Binary output can mess up your terminal. Use "--output -" to tell
Warning: curl to output it to your terminal anyway, or consider "--output
Warning: <FILE>" to save to a file.




C:\WINDOWS\system32>cd C:\programdata\chocolatey\bin



C:\ProgramData\chocolatey\bin>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\bin

22-01-2023  15:30    <DIR>          .
22-01-2023  15:30    <DIR>          ..
06-12-2022  19:39           146,048 choco.exe
06-12-2022  19:39           146,560 chocolatey.exe
06-12-2022  19:39           146,560 cinst.exe
06-12-2022  19:39           146,560 clist.exe
06-12-2022  19:39           146,560 cpush.exe
06-12-2022  19:39           146,560 cuninst.exe
06-12-2022  19:39           146,560 cup.exe
06-12-2022  19:39             2,340 RefreshEnv.cmd
22-01-2023  15:30           392,704 wget.exe
17-01-2023  23:37                21 _processed.txt
              10 File(s)      1,420,473 bytes
               2 Dir(s)  190,285,656,064 bytes free




C:\ProgramData\chocolatey\bin>choco uninstall notepad2
Chocolatey v1.2.1
Uninstalling the following packages:
notepad2

notepad2 v4.2.25.20160422
The package notepad2 wants to run 'chocolateyUninstall.ps1'.
Note: If you don't run this script, the installation will fail.
Note: To confirm automatically next time, use '-y' or consider:
choco feature enable -n allowGlobalConfirmation
Do you want to run the script?([Y]es/[A]ll - yes to all/[N]o/[P]rint): Y

Uninstalling notepad2...
WARNING: May not be able to find 'rundll32.exe'. Please use full path for executables.
0
notepad2 has been uninstalled.
 Running auto uninstaller...
 Skipping auto uninstaller - 'Notepad2 (Notepad Replacement)' appears to have been uninstalled already by other means.
 notepad2 has been successfully uninstalled.

Chocolatey uninstalled 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).




C:\ProgramData\chocolatey\bin>choco install notepad2 -y
Chocolatey v1.2.1
Installing the following packages:
notepad2
By installing, you accept licenses for the packages.
Progress: Downloading notepad2 4.2.25.20160422... 100%

notepad2 v4.2.25.20160422 [Approved]
notepad2 package files install completed. Performing other installation steps.
WARNING: Url has SSL/TLS available, switching to HTTPS for download
Downloading notepad2 64 bit
  from 'https://www.flos-freeware.ch/zip/Notepad2_4.2.25_x64.exe'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\notepad2\4.2.25.20160422\Notepad2_4.2.25_x64.exe (350.5 KB).
Download of Notepad2_4.2.25_x64.exe (350.5 KB) completed.
Hashes match.
Installing notepad2...
notepad2 has been installed.
  notepad2 may be able to be automatically uninstalled.
 The install of notepad2 was successful.
  Software installed to 'C:\Program Files\Notepad2\'

Chocolatey installed 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).




C:\ProgramData\chocolatey\bin>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\bin

22-01-2023  15:30    <DIR>          .
22-01-2023  15:30    <DIR>          ..
06-12-2022  19:39           146,048 choco.exe
06-12-2022  19:39           146,560 chocolatey.exe
06-12-2022  19:39           146,560 cinst.exe
06-12-2022  19:39           146,560 clist.exe
06-12-2022  19:39           146,560 cpush.exe
06-12-2022  19:39           146,560 cuninst.exe
06-12-2022  19:39           146,560 cup.exe
06-12-2022  19:39             2,340 RefreshEnv.cmd
22-01-2023  15:30           392,704 wget.exe
17-01-2023  23:37                21 _processed.txt
              10 File(s)      1,420,473 bytes
              2 Dir(s)  190,278,291,456 bytes free


C:\ProgramData\chocolatey\bin>cd c:
C:\ProgramData\chocolatey\bin

C:\ProgramData\chocolatey\bin>cd
C:\ProgramData\chocolatey\bin

C:\ProgramData\chocolatey\bin>cd c:/

c:\>cd Program Files\Notepad2\

c:\Program Files\Notepad2>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of c:\Program Files\Notepad2

22-01-2023  16:32    <DIR>          .
22-01-2023  16:32    <DIR>          ..
06-05-2011  00:00             1,518 License.txt
06-05-2011  00:00           919,552 Notepad2.exe
06-05-2011  00:00             2,897 Notepad2.inf
22-01-2023  16:32                49 Notepad2.ini
06-05-2011  00:00            39,728 Notepad2.txt
               5 File(s)        963,744 bytes
               2 Dir(s)  190,277,918,720 bytes free



c:\Program Files\Notepad2>cd ..

c:\Program Files>cd ..

c:\>cd ..

c:\>cd C:\programdata\chocolatey\lib

C:\ProgramData\chocolatey\lib>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\lib

22-01-2023  16:32    <DIR>          .
22-01-2023  16:32    <DIR>          ..
17-01-2023  23:37    <DIR>          chocolatey
22-01-2023  16:32    <DIR>          notepad2
22-01-2023  15:30    <DIR>          Wget
               0 File(s)              0 bytes
               5 Dir(s)  190,276,866,048 bytes free



C:\ProgramData\chocolatey\lib>choco install nano -y
Chocolatey v1.2.1
Installing the following packages:
nano
By installing, you accept licenses for the packages.
Progress: Downloading nano 7.1.13... 100%

nano-win v7.1.13 [Approved]
nano-win package files install completed. Performing other installation steps.
Attempt to get headers for https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z failed.
  The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
Downloading nano-win
  from 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'
ERROR: The remote file either doesn't exist, is unauthorized, or is forbidden for url 'https://files.lhmouse.com/nano-win/nano-win_10156_v7.1-13-ga4fc06579.7z'. Exception calling "GetResponse" with "0" argument(s): "The remote server returned an error: (404) Not Found."
This package is likely not broken for licensed users - see https://docs.chocolatey.org/en-us/features/private-cdn.
The install of nano-win was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.

nano v7.1.13 [Approved]
nano package files install completed. Performing other installation steps.
 The install of nano was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\nano'

Chocolatey installed 1/2 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - nano-win (exited 404) - Error while running 'C:\ProgramData\chocolatey\lib\nano-win\tools\chocolateyInstall.ps1'.
 See log for details.



C:\ProgramData\chocolatey\lib>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\lib

22-01-2023  16:36    <DIR>          .
22-01-2023  16:36    <DIR>          ..
17-01-2023  23:37    <DIR>          chocolatey
22-01-2023  16:36    <DIR>          nano
22-01-2023  16:32    <DIR>          notepad2
22-01-2023  15:30    <DIR>          Wget
               0 File(s)              0 bytes
               6 Dir(s)  190,274,830,336 bytes free



C:\ProgramData\chocolatey\lib>cd nano


C:\ProgramData\chocolatey\lib\nano>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\lib\nano

22-01-2023  16:36    <DIR>          .
22-01-2023  16:36    <DIR>          ..
22-01-2023  16:36             4,437 nano.nupkg
22-01-2023  16:36             2,627 nano.nuspec
               2 File(s)          7,064 bytes
               2 Dir(s)  190,274,707,456 bytes free


C:\ProgramData\chocolatey\lib\nano>cd ..

C:\ProgramData\chocolatey\lib>cd ..

C:\ProgramData\chocolatey>cd bin

C:\ProgramData\chocolatey\bin>dir
 Volume in drive C is OS
 Volume Serial Number is C076-C383

 Directory of C:\ProgramData\chocolatey\bin

22-01-2023  15:30    <DIR>          .
22-01-2023  15:30    <DIR>          ..
06-12-2022  19:39           146,048 choco.exe
06-12-2022  19:39           146,560 chocolatey.exe
06-12-2022  19:39           146,560 cinst.exe
06-12-2022  19:39           146,560 clist.exe
06-12-2022  19:39           146,560 cpush.exe
06-12-2022  19:39           146,560 cuninst.exe
06-12-2022  19:39           146,560 cup.exe
06-12-2022  19:39             2,340 RefreshEnv.cmd
22-01-2023  15:30           392,704 wget.exe
17-01-2023  23:37                21 _processed.txt
              10 File(s)      1,420,473 bytes
               2 Dir(s)  190,275,166,208 bytes free


C:\ProgramData\chocolatey\bin>nano /?


C:\ProgramData\chocolatey\bin>nano --version
 GNU nano from git, v7.1-12-g14f292a7c
 (C) 2023 the Free Software Foundation and various contributors
 Compiled options: --disable-libmagic --disable-speller --disable-nls --enable-utf8


C:\ProgramData\chocolatey\bin>curl google.com
<HTML><HEAD><meta http-equiv="content-type" content="text/html;charset=utf-8">
<TITLE>301 Moved</TITLE></HEAD><BODY>
<H1>301 Moved</H1>
The document has moved
<A HREF="http://www.google.com/">here</A>.
</BODY></HTML>


C:\ProgramData\chocolatey\bin>cd ../..

C:\ProgramData>cd ..




C:\>choco install -y consolez cmder conemu
Chocolatey v1.2.1
Installing the following packages:
consolez;cmder;conemu
By installing, you accept licenses for the packages.
Progress: Downloading ConsoleZ 1.19.0.19104... 100%

ConsoleZ v1.19.0.19104 [Approved]
consolez package files install completed. Performing other installation steps.
Downloading ConsoleZ 64 bit
  from 'https://github.com/cbucher/console/releases/download/1.19.0/ConsoleZ.x64.1.19.0.19104.zip'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\ConsoleZ\1.19.0.19104\ConsoleZ.x64.1.19.0.19104.zip (2.72 MB).
Download of ConsoleZ.x64.1.19.0.19104.zip (2.72 MB) completed.
Hashes match.
Extracting C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\ConsoleZ\1.19.0.19104\ConsoleZ.x64.1.19.0.19104.zip to C:\ProgramData\chocolatey\lib\ConsoleZ\tools...
C:\ProgramData\chocolatey\lib\ConsoleZ\tools
 ShimGen has successfully created a gui shim for Console.exe
 The install of consolez was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\ConsoleZ\tools'
Progress: Downloading vcredist2010 10.0.40219.32503... 100%
Progress: Downloading Cmder 1.3.20... 100%

vcredist2010 v10.0.40219.32503 [Approved]
vcredist2010 package files install completed. Performing other installation steps.
Downloading vcredist2010 64 bit
  from 'https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x64.exe'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\vcredist2010\10.0.40219.32503\vcredist_x64.exe (9.8 MB).
Download of vcredist_x64.exe (9.8 MB) completed.
Hashes match.
Installing vcredist2010...
vcredist2010 has been installed.
Downloading vcredist2010 32 bit
  from 'https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\vcredist2010\10.0.40219.32503\vcredist_x86.exe (8.58 MB).
Download of vcredist_x86.exe (8.58 MB) completed.
Hashes match.
Installing vcredist2010...
vcredist2010 has been installed.
  vcredist2010 may be able to be automatically uninstalled.
 The install of vcredist2010 was successful.
  Software installed as 'exe', install location is likely default.

Cmder v1.3.20 [Approved]
cmder package files install completed. Performing other installation steps.
Extracting C:\ProgramData\chocolatey\lib\Cmder\tools\cmder.7z to C:\tools\Cmder...
C:\tools\Cmder
PATH environment variable does not have C:\tools\Cmder in it. Adding...
Environment Vars (like PATH) have changed. Close/reopen your shell to
 see the changes (or in powershell/cmd.exe just type `refreshenv`).
 The install of cmder was successful.
  Software installed to 'C:\tools\Cmder'
Progress: Downloading ConEmu 22.12.18.0... 100%

ConEmu v22.12.18.0 [Approved]
conemu package files install completed. Performing other installation steps.
Downloading ConEmu 64 bit
  from 'https://github.com/Maximus5/ConEmu/releases/download/v22.12.18/ConEmuSetup.221218.exe'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\ConEmu\22.12.18.0\ConEmuSetup.221218.exe (7.6 MB).
Download of ConEmuSetup.221218.exe (7.6 MB) completed.
Hashes match.
Installing ConEmu...
ConEmu has been installed.
  conemu may be able to be automatically uninstalled.
 The install of conemu was successful.
  Software installed as 'exe', install location is likely default.

Chocolatey installed 4/4 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).




C:\>virtualbox --version
'virtualbox' is not recognized as an internal or external command,
operable program or batch file.

C:\>vagrant --version
Vagrant 2.3.4

C:\>virtualbox /?
'virtualbox' is not recognized as an internal or external command,
operable program or batch file.

C:\>




Microsoft Windows [Version 10.0.19044.2486]
(c) Microsoft Corporation. All rights reserved.



C:\WINDOWS\system32>choco install -y virtualbox
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
VirtualBox-7.0.6-155176-Win.exe: error: Installation failed! Error: Fatal error during installation.
Microsoft.PowerShell.Commands.WriteErrorException
ERROR: Running ["C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\virtualbox\7.0.6\VirtualBox-7.0.6-155176-Win.exe" -s -l -msiparams REBOOT=ReallySuppress ALLUSERS=1 ] was not successful. Exit code was '1'. See log for possible error messages.
The install of virtualbox was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox (exited 1) - Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.



C:\WINDOWS\system32>choco uninstall virtualbox
Chocolatey v1.2.1
Uninstalling the following packages:
virtualbox
virtualbox is not installed. Cannot uninstall a non-existent package.

Chocolatey uninstalled 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox - virtualbox is not installed. Cannot uninstall a non-existent package.

If a package uninstall is failing and/or you've already uninstalled the
 software outside of Chocolatey, you can attempt to run the command
 with `-n` to skip running a chocolateyUninstall script, additionally
 adding `--skip-autouninstaller` to skip an attempt to automatically
 remove system-installed software. Only the packaging files are removed
 and not things like software installed to Programs and Features.

If a package is failing because it is a dependency of another package
 or packages, then you may first need to consider if it needs to be
 removed as packages have dependencies for a reason. If
 you decide that you still want to remove it, head into
 `$env:ChocolateyInstall\lib` and find the package folder you want to
 be removed. Then delete the folder for the package. You should use
 this option only as a last resort.



C:\WINDOWS\system32>choco install -y virtualbox --force
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 (forced) [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
VirtualBox-7.0.6-155176-Win.exe: error: Installation failed! Error: Fatal error during installation.
Microsoft.PowerShell.Commands.WriteErrorException
ERROR: Running ["C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\virtualbox\7.0.6\VirtualBox-7.0.6-155176-Win.exe" -s -l -msiparams REBOOT=ReallySuppress ALLUSERS=1 ] was not successful. Exit code was '1'. See log for possible error messages.
The install of virtualbox was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox (exited 1) - Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.





C:\WINDOWS\system32>choco install -y vscode
Chocolatey v1.2.1
Installing the following packages:
vscode
By installing, you accept licenses for the packages.
Progress: Downloading vscode.install 1.74.3... 100%
Progress: Downloading DotNet4.5.2 4.5.2.20140902... 100%
Progress: Downloading vscode 1.74.3... 100%

DotNet4.5.2 v4.5.2.20140902 [Approved]
dotnet4.5.2 package files install completed. Performing other installation steps.
Microsoft .Net 4.5.2 Framework is already installed on your machine.
 The install of dotnet4.5.2 was successful.
  Software install location not explicitly set, it could be in package or
  default install location of installer.

vscode.install v1.74.3 [Approved]
vscode.install package files install completed. Performing other installation steps.
WARNING: No registry key found based on  'Microsoft Visual Studio Code'
Merge Tasks: !runCode, desktopicon, quicklaunchicon, addcontextmenufiles, addcontextmenufolders, associatewithfiles, addtopath
Downloading vscode.install 64 bit
  from 'https://az764295.vo.msecnd.net/stable/97dec172d3256f8ca4bfb2143f3f76b503ca0534/VSCodeSetup-x64-1.74.3.exe'
Progress: 100% - Completed download of C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\vscode.install\1.74.3\VSCodeSetup-x64-1.74.3.exe (88.76 MB).
Download of VSCodeSetup-x64-1.74.3.exe (88.76 MB) completed.
Hashes match.
Installing vscode.install...
vscode.install has been installed.
  vscode.install can be automatically uninstalled.
Environment Vars (like PATH) have changed. Close/reopen your shell to
 see the changes (or in powershell/cmd.exe just type `refreshenv`).
 The install of vscode.install was successful.
  Software installed to 'C:\Program Files\Microsoft VS Code\'

vscode v1.74.3 [Approved]
vscode package files install completed. Performing other installation steps.
 The install of vscode was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\vscode'

Chocolatey installed 3/3 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).





C:\WINDOWS\system32>choco install -y git --params "/GitAndUnixToolsOnPath /WindowsTerminal"
Chocolatey v1.2.1
Installing the following packages:
git
By installing, you accept licenses for the packages.
Progress: Downloading git.install 2.39.1... 100%
Progress: Downloading git 2.39.1... 100%

git.install v2.39.1 [Approved]
git.install package files install completed. Performing other installation steps.
Using Git LFS
Installing 64-bit git.install...
git.install has been installed.
git.install installed to 'C:\Program Files\Git'
  git.install can be automatically uninstalled.
Environment Vars (like PATH) have changed. Close/reopen your shell to
 see the changes (or in powershell/cmd.exe just type `refreshenv`).
 The install of git.install was successful.
  Software installed to 'C:\Program Files\Git\'

git v2.39.1 [Approved]
git package files install completed. Performing other installation steps.
 The install of git was successful.
  Software installed to 'C:\ProgramData\chocolatey\lib\git'

Chocolatey installed 2/2 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).





C:\WINDOWS\system32>refreshenv
Refreshing environment variables from registry for cmd.exe. Please wait...Finished..





C:\WINDOWS\system32>choco install -y virtualbox --force
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 (forced) [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
VirtualBox-7.0.6-155176-Win.exe: error: Installation failed! Error: Fatal error during installation.
Microsoft.PowerShell.Commands.WriteErrorException
ERROR: Running ["C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\virtualbox\7.0.6\VirtualBox-7.0.6-155176-Win.exe" -s -l -msiparams REBOOT=ReallySuppress ALLUSERS=1 ] was not successful. Exit code was '1'. See log for possible error messages.
The install of virtualbox was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox (exited 1) - Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.






Microsoft Windows [Version 10.0.19044.2486]
(c) Microsoft Corporation. All rights reserved.

C:\WINDOWS\system32>choco install -y virtualbox
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
VirtualBox-7.0.6-155176-Win.exe: error: Installation failed! Error: Fatal error during installation.
Microsoft.PowerShell.Commands.WriteErrorException
ERROR: Running ["C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\virtualbox\7.0.6\VirtualBox-7.0.6-155176-Win.exe" -s -l -msiparams REBOOT=ReallySuppress ALLUSERS=1 ] was not successful. Exit code was '1'. See log for possible error messages.
The install of virtualbox was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox (exited 1) - Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

C:\WINDOWS\system32>vagrant
^C
C:\WINDOWS\system32>
C:\WINDOWS\system32>
C:\WINDOWS\system32>vagrant -version
Usage: vagrant [options] <command> [<args>]

    -h, --help                       Print this help.

Common commands:
     autocomplete    manages autocomplete installation on host
     box             manages boxes: installation, removal, etc.
     cloud           manages everything related to Vagrant Cloud
     destroy         stops and deletes all traces of the vagrant machine
     global-status   outputs status Vagrant environments for this user
     halt            stops the vagrant machine
     help            shows the help for a subcommand
     init            initializes a new Vagrant environment by creating a Vagrantfile
     login
     package         packages a running vagrant environment into a box
     plugin          manages plugins: install, uninstall, update, etc.
     port            displays information about guest port mappings
     powershell      connects to machine via powershell remoting
     provision       provisions the vagrant machine
     push            deploys code in this environment to a configured destination
     rdp             connects to machine via RDP
     reload          restarts vagrant machine, loads new Vagrantfile configuration
     resume          resume a suspended vagrant machine
     serve           start Vagrant server
     snapshot        manages snapshots: saving, restoring, etc.
     ssh             connects to machine via SSH
     ssh-config      outputs OpenSSH valid configuration to connect to the machine
     status          outputs status of the vagrant machine
     suspend         suspends the machine
     up              starts and provisions the vagrant environment
     upload          upload to machine via communicator
     validate        validates the Vagrantfile
     version         prints current and latest Vagrant version
     winrm           executes commands on a machine via WinRM
     winrm-config    outputs WinRM configuration to connect to the machine

For help on any individual command run `vagrant COMMAND -h`

Additional subcommands are available, but are either more advanced
or not commonly used. To see all subcommands, run the command
`vagrant list-commands`.
        --[no-]color                 Enable or disable color output
        --machine-readable           Enable machine readable output
    -v, --version                    Display Vagrant version
        --debug                      Enable debug output
        --timestamp                  Enable timestamps on log output
        --debug-timestamp            Enable debug output with timestamps
        --no-tty                     Enable non-interactive output



C:\WINDOWS\system32>vagrant --version
Vagrant 2.3.4



C:\WINDOWS\system32>choco install -y virtualbox --force
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 (forced) [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
VirtualBox-7.0.6-155176-Win.exe: error: Installation failed! Error: Fatal error during installation.
Microsoft.PowerShell.Commands.WriteErrorException
ERROR: Running ["C:\Users\Nabajyoti Modak\AppData\Local\Temp\chocolatey\virtualbox\7.0.6\VirtualBox-7.0.6-155176-Win.exe" -s -l -msiparams REBOOT=ReallySuppress ALLUSERS=1 ] was not successful. Exit code was '1'. See log for possible error messages.
The install of virtualbox was NOT successful.
Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - virtualbox (exited 1) - Error while running 'C:\ProgramData\chocolatey\lib\virtualbox\tools\chocolateyInstall.ps1'.
 See log for details.




C:\WINDOWS\system32>nano /?




C:\WINDOWS\system32>choco install -y virtualbox
Chocolatey v1.2.1
Installing the following packages:
virtualbox
By installing, you accept licenses for the packages.
Progress: Downloading virtualbox 7.0.6... 100%

virtualbox v7.0.6 [Approved]
virtualbox package files install completed. Performing other installation steps.
File appears to be downloaded already. Verifying with package checksum to determine if it needs to be redownloaded.
Hashes match.
Hashes match.
Installing virtualbox...
virtualbox has been installed.
Adding to PATH if needed
PATH environment variable does not have C:\Program Files\Oracle\VirtualBox in it. Adding...
virtualbox installed to 'C:\Program Files\Oracle\VirtualBox'
virtualbox registered as vbox
  virtualbox may be able to be automatically uninstalled.
Environment Vars (like PATH) have changed. Close/reopen your shell to
 see the changes (or in powershell/cmd.exe just type `refreshenv`).
 The install of virtualbox was successful.
  Software installed as 'EXE', install location is likely default.

Chocolatey installed 1/1 packages.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).



C:\WINDOWS\system32>refreshenv
Refreshing environment variables from registry for cmd.exe. Please wait...Finished..

C:\WINDOWS\system32>bash

Nabajyoti Modak@DESKTOP-IM944O7  /c/WINDOWS/system32
$ cd ~

Nabajyoti Modak@DESKTOP-IM944O7  ~
$ echo "Software Installations for Devops Lab Setup Complete"
Software Installations for Devops Lab Setup Complete

Nabajyoti Modak@DESKTOP-IM944O7  ~
$ echo "Software Installations for Devops Lab Setup Complete"
Software Installations for Devops Lab Setup Complete

Nabajyoti Modak@DESKTOP-IM944O7  ~
$




C:\WINDOWS\system32>cd "C:\Users\Nabajyoti Modak"


C:\Users\Nabajyoti Modak>tree devops
Folder PATH listing for volume OS
Volume serial number is 000000D8 C076:C383
C:\USERS\NABAJYOTI MODAK\DEVOPS
Invalid path - \USERS\NABAJYOTI MODAK\DEVOPS
No subfolders exist


C:\Users\Nabajyoti Modak>bash

Nabajyoti Modak@DESKTOP-IM944O7  ~
$ pwd
/c/Users/Nabajyoti Modak


Nabajyoti Modak@DESKTOP-IM944O7  ~
$ mkdir devops


Nabajyoti Modak@DESKTOP-IM944O7  ~
$ cd devops


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops
$ mkdir provision release coding


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops
$ cd release


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/release
$ mkdir git gitlab jenkins tomcat nagios


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/release
$ cd ..


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops
$ cd coding


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding
$ mkdir puppet chef ansible terraform


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding
$ cd puppet


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding/puppet
$ mkdir puppetserver puppetnode


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding/puppet
$ cd ..


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding
$ cd chef


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding/chef
$ mkdir chefserver chefworkstation chefnode


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding/chef
$ cd ..


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/coding
$ cd ..


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops
$ cd provision



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision
$ mkdir vagrant docker kubernetes



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision
$ cd vagrant



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant
$ mkdir centos ubuntu



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant
$ cd centos



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/centos
$ vagrant init centos/7
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/centos
$ vagrant up && vagrant halt
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'centos/7' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'centos/7'
    default: URL: https://vagrantcloud.com/centos/7
==> default: Adding box 'centos/7' (v2004.01) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/centos/boxes/7/versions/2004.01/providers/virtualbox.box
Download redirected to host: cloud.centos.org
    default:
    default: Calculating and comparing box checksum...
==> default: Successfully added box 'centos/7' (v2004.01) for 'virtualbox'!
==> default: Importing base box 'centos/7'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'centos/7' version '2004.01' is up to date...
==> default: Setting the name of the VM: centos_default_1675006442652_92372
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: No guest additions were detected on the base box for this VM! Guest
    default: additions are required for forwarded ports, shared folders, host only
    default: networking, and more. If SSH fails on this machine, please install
    default: the guest additions and repackage the box to continue.
    default:
    default: This is not an error message; everything may continue to work properly,
    default: in which case you may ignore this message.
==> default: Rsyncing folder: /cygdrive/c/Users/Nabajyoti Modak/devops/provision/vagrant/centos/ => /vagrant
==> default: Attempting graceful shutdown of VM...



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/centos
$ cd ../ubuntu



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/ubuntu
$ vagrant init ubuntu/xenial64
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.



Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/ubuntu
$ vagrant up && vagrant halt
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'ubuntu/xenial64' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'ubuntu/xenial64'
    default: URL: https://vagrantcloud.com/ubuntu/xenial64
==> default: Adding box 'ubuntu/xenial64' (v20211001.0.0) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/ubuntu/boxes/xenial64/versions/20211001.0.0/providers/virtualbox.box
Download redirected to host: cloud-images.ubuntu.com
    default:
==> default: Successfully added box 'ubuntu/xenial64' (v20211001.0.0) for 'virtualbox'!
==> default: Importing base box 'ubuntu/xenial64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/xenial64' version '20211001.0.0' is up to date...
==> default: Setting the name of the VM: ubuntu_default_1675006815698_70422
Vagrant is currently configured to create VirtualBox synced folders with
the `SharedFoldersEnableSymlinksCreate` option enabled. If the Vagrant
guest is not trusted, you may want to disable this option. For more
information on this option, please refer to the VirtualBox manual:

  https://www.virtualbox.org/manual/ch04.html#sharedfolders

This option can be disabled globally with an environment variable:

  VAGRANT_DISABLE_VBOXSYMLINKCREATE=1

or on a per folder basis within the Vagrantfile:

  config.vm.synced_folder '/host/path', '/guest/path', SharedFoldersEnableSymlinksCreate: false
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 (guest) => 2222 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection reset. Retrying...
    default: Warning: Connection aborted. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 5.1.38
    default: VirtualBox Version: 7.0
==> default: Mounting shared folders...
    default: /vagrant => C:/Users/Nabajyoti Modak/devops/provision/vagrant/ubuntu
==> default: Attempting graceful shutdown of VM...

Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/ubuntu
$ echo "Lab Setup Complete"
Lab Setup Complete


Nabajyoti Modak@DESKTOP-IM944O7  ~/devops/provision/vagrant/ubuntu
$





